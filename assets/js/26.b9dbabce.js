(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{804:function(t,s,a){"use strict";a.r(s);var n=a(118),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"线上问题复盘-异常信息消失的罪魁祸首-jvm-fast-throw"}},[t._v("线上问题复盘，异常信息消失的罪魁祸首 JVM-Fast-Throw "),a("a",{staticClass:"header-anchor",attrs:{href:"#线上问题复盘-异常信息消失的罪魁祸首-jvm-fast-throw"}},[t._v("#")])]),t._v(" "),a("p",[t._v("首先，这是一个 "),a("strong",[t._v("悲伤的故事")]),t._v("，涉及到 JVM 底层优化的知识点。想到第一次碰到这种问题时的懵逼，应了句老话："),a("strong",[t._v("书到用时方恨少！")])]),t._v(" "),a("p",[t._v("负责的消息中台在 "),a("strong",[t._v("晚上八点左右")]),t._v("，运维群里反馈大量用户接收不到短信消息。登陆 Kibana 查找对应的 Error 日志，发现出现了 "),a("strong",[t._v("大量的下标越界异常")])]),t._v(" "),a("p",[t._v("当时更...，线上问题得到了修复。但是，出现问题可不得找到问题的产出原因，不然下次有可能还会出现")]),t._v(" "),a("p",[t._v("因为在 ELK 上进行 "),a("strong",[t._v("日志分析不太方便")]),t._v("，难以根据对应异常进行不同纬度上的统计分析，所以联系运维同学将故障产生当天的 "),a("strong",[t._v("Info、Error 日志")]),t._v(" 拉下来进行线下分析")]),t._v(" "),a("p",[t._v("经过日志分析得知，异常的产出有两种，"),a("strong",[t._v("一种是有堆栈信息")]),t._v("，比如：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ArrayIndexOutOfBoundsException")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 省略堆栈信息\n")])])]),a("p",[t._v("另外一种，就比较诡异，"),a("strong",[t._v("只有异常，没有对应的堆栈信息")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ArrayIndexOutOfBoundsException")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])]),a("p",[t._v("第一种问题比较好定位，根据 "),a("strong",[t._v("异常堆栈信息")]),t._v("，定位到了具体代码，直接进行了修复，难就难在第二种")]),t._v(" "),a("p",[a("strong",[t._v("其实这两个是一个异常")]),t._v("，往后看小伙伴就明白了。后面做的所有事情，都是为了搞清楚两件事情")]),t._v(" "),a("ul",[a("li",[t._v("为什么异常 message 会输出 null")]),t._v(" "),a("li",[t._v("为什么堆栈信息没有输出打印")])]),t._v(" "),a("h2",{attrs:{id:"jvm-fast-throw"}},[t._v("JVM Fast Throw "),a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-fast-throw"}},[t._v("#")])]),t._v(" "),a("p",[a("strong",[t._v("什么是 Fast Throw？")])]),t._v(" "),a("p",[t._v("大白话一点来说，就是：当一些异常类型（空指针、下标越界、算术运算等...）在代码里的固定位置被抛出多次，虚拟机（HotSpot VM）会直接 "),a("strong",[t._v("抛出一个事先分配好、类型匹配的异常对象")]),t._v("。此异常对象的 "),a("strong",[t._v("message 和 stack trace 都为空")])]),t._v(" "),a("p",[t._v("看到这里相信读者朋友已经明白了为什么同一种异常，"),a("strong",[t._v("打印出来的日志却是不一样内容")]),t._v(" 了吧。就是因为某一个异常在同一个地方多次被抛出，JVM 抛出一个预分配异常，那么 "),a("strong",[t._v("message、stack trace 相当于被吞掉了")])]),t._v(" "),a("blockquote",[a("p",[t._v('The compiler in the server VM now provides correct stack backtraces for all "cold" built-in exceptions. For performance purposes, when such an exception is thrown a few times, the method may be recompiled. After recompilation, the compiler may choose a faster tactic using preallocated exceptions that do not provide a stack trace. To disable completely the use of preallocated exceptions, use this new flag: '),a("strong",[t._v("-XX:-OmitStackTraceInFastThrow.")])])]),t._v(" "),a("p",[t._v("JDK 1.5 的发布文档介绍中描述了此情况，出现这种优化方案的原因是 "),a("strong",[t._v("为了提高性能")]),t._v("。当同一种异常在相同的位置被抛出多次，"),a("strong",[t._v("编译器就会重新编译此方法")]),t._v("。重编译后，编译器可能会 "),a("strong",[t._v("使用不提供堆栈跟踪的预分配异常")]),t._v(" 来选择更快的策略")]),t._v(" "),a("p",[t._v("如果想要关闭这种预分配异常的机制，可以使用 "),a("strong",[t._v("-XX:-OmitStackTraceInFastThrow")]),t._v("。感兴趣的读者朋友可以看一下发布说明："),a("code",[t._v("https://sourl.cn/PMzVkC")])]),t._v(" "),a("p",[t._v("另外通过 JVM 的源码得知，Fast Throw 机制目前支持五种异常情况，截图如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/34bf1837-6d11-4228-9e76-f6d0e7bfeef7.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"模拟-fast-throw"}},[t._v("模拟 Fast Throw "),a("a",{staticClass:"header-anchor",attrs:{href:"#模拟-fast-throw"}},[t._v("#")])]),t._v(" "),a("p",[t._v("上面说的都是理论部分，这个章节使用代码来实战下")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"报错异常 :: %s, 堆栈长度 :: %s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面程序跑在了 Java8 的环境中，通过运行程序结果可以看出来，Fast Throw 在 Java 8 中依然生效")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/96b65751-42fd-4ea1-8d83-5a5b3cbd71cf.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("如果没有特别情况，最好不要关闭此特性")]),t._v("。因为如果并发量大的接口，因为程序的 BUG 导致大量的请求在同一代码处抛出异常，"),a("strong",[t._v("Fast Throw 机制可以节省很多性能损耗")]),t._v("。通过单线程跑测试 Demo 得知，异常调用情况越多，性能差别越大")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("开启 Fast Throw")]),t._v(" "),a("th",[t._v("关闭 Fast Throw")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("10w")]),t._v(" "),a("td",[t._v("1004ms")]),t._v(" "),a("td",[t._v("3547ms")])]),t._v(" "),a("tr",[a("td",[t._v("100 w")]),t._v(" "),a("td",[t._v("6193ms")]),t._v(" "),a("td",[t._v("30928ms")])]),t._v(" "),a("tr",[a("td",[t._v("500w")]),t._v(" "),a("td",[t._v("37492ms")]),t._v(" "),a("td",[t._v("...")])])])]),t._v(" "),a("p",[t._v("如果线上环境触发了 Fast Throw 机制，可以通过 "),a("strong",[t._v("向前追溯相同位置、相同异常的日志")]),t._v(" 来定位问题的产出原因")]),t._v(" "),a("h2",{attrs:{id:"结言"}},[t._v("结言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#结言"}},[t._v("#")])]),t._v(" "),a("p",[t._v("千言万语汇成一句话就是，"),a("strong",[a("em",[t._v("重构有风险，上线需谨慎")])])]),t._v(" "),a("p",[t._v("针对公共功能的重构，"),a("strong",[t._v("需要包含全量的测试用例")]),t._v("，要将可能会出现的问题产出背景考虑到 "),a("strong",[t._v("极致")]),t._v("，亦或者和身边同事说明需求背景，大家一起想下，可以极大程度避免极端问题的产出")]),t._v(" "),a("p",[a("strong",[t._v("必要的压力测试")]),t._v(" 是很重要的，这一点可以很好的将 "),a("strong",[t._v("流量大才能显现的问题")]),t._v(" 提前暴露出来")]),t._v(" "),a("p",[t._v("故障的产生带来的意义，有好有坏，坏的点大家都懂得；好的点自然是 "),a("strong",[t._v("积累了线上问题故障排查的经验")])])])}),[],!1,null,null,null);s.default=r.exports}}]);