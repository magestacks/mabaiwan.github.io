(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{796:function(s,t,a){"use strict";a.r(t);var n=a(118),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"心态崩了呀-mybatis-动态代理这么玩"}},[s._v("心态崩了呀！Mybatis 动态代理这么玩？！ "),a("a",{staticClass:"header-anchor",attrs:{href:"#心态崩了呀-mybatis-动态代理这么玩"}},[s._v("#")])]),s._v(" "),a("p",[s._v("假如有人问你这么几个问题，看能不能答上来")]),s._v(" "),a("ol",[a("li",[s._v("Mybatis Mapper 接口没有实现类，怎么实现的 SQL 查询")]),s._v(" "),a("li",[s._v("JDK 动态代理为什么不能对类进行代理（充话费送的问题）")]),s._v(" "),a("li",[s._v("抽象类可不可以进行 JDK 动态代理（附加问题）")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E4%BD%A0%E8%AF%B4%E5%95%A5%E5%91%A2-%E8%A1%A8%E6%83%85%E5%8C%85.jpeg?x-oss-process=image/resize,h_200,w_200",alt:""}})]),s._v(" "),a("p",[s._v("答不上来的铁汁，证明 Proxy、Mybatis 源码还没看到位。不过没有关系，继续往下看就明白了")]),s._v(" "),a("h2",{attrs:{id:"动态代理实战"}},[s._v("动态代理实战 "),a("a",{staticClass:"header-anchor",attrs:{href:"#动态代理实战"}},[s._v("#")])]),s._v(" "),a("p",[s._v("众所周知哈，Mybatis 底层封装使用的 JDK 动态代理。说 Mybatis 动态代理之前，先来看一下平常我们写的动态代理 Demo，抛砖引玉")]),s._v(" "),a("p",[s._v("一般来说定义 JDK 动态代理分为三个步骤，如下所示")]),s._v(" "),a("ol",[a("li",[s._v("定义代理接口")]),s._v(" "),a("li",[s._v("定义代理接口实现类")]),s._v(" "),a("li",[s._v("定义动态代理调用处理器")])]),s._v(" "),a("p",[s._v("三步代码如下所示，玩过动态代理的小伙伴看过就能明白")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义代理接口")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SubjectImpl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义代理接口实现类")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyInvocationHandler")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InvocationHandler")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义动态代理调用处理器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 🧱 🧱 🧱 进入代理调用处理器 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("写个测试程序，运行一下看看效果，同样是分三步")]),s._v(" "),a("ol",[a("li",[s._v("创建被代理接口的实现类")]),s._v(" "),a("li",[s._v("创建动态代理类，说一下三个参数\n"),a("ul",[a("li",[s._v("类加载器")]),s._v(" "),a("li",[s._v("被代理类所实现的接口数组")]),s._v(" "),a("li",[s._v("调用处理器（调用被代理类方法，每次都经过它）")])])]),s._v(" "),a("li",[s._v("被代理实现类调用方法")])]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),s._v(" subject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SubjectImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),s._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Proxy")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n                        subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                        subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInterfaces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n         * 打印输出如下\n         * 调用处理器：🧱 🧱 🧱 进入代理调用处理器\n         * 被代理实现类：Hello World\n         */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("Demo 功能实现了，大致运行流程也清楚了，下面要针对原理实现展开分析")]),s._v(" "),a("h2",{attrs:{id:"动态代理原理分析"}},[s._v("动态代理原理分析 "),a("a",{staticClass:"header-anchor",attrs:{href:"#动态代理原理分析"}},[s._v("#")])]),s._v(" "),a("p",[s._v("从原理的角度上解析一下，上面动态代理测试程序是如何执行的")]),s._v(" "),a("p",[s._v("第一步简单明了，"),a("strong",[s._v("创建了 Subject 接口的实现类")]),s._v("，也是我们常规的实现")]),s._v(" "),a("p",[s._v("第二步是创建被代理对象的动态代理对象。这里有朋友就问了，怎么证明这是个动态代理对象？如图所示")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210111133425968.png",alt:""}})]),s._v(" "),a("p",[s._v("JDK 动态代理对象名称是有规则的，凡是经过 Proxy 类生成的动态代理对象，前缀必然是 "),a("strong",[s._v("$Proxy")]),s._v("，后面的数字也是名称组成部分")]),s._v(" "),a("p",[s._v("如果有小伙伴想要一探究竟，"),a("strong",[s._v("关注 Proxy 内部类 ProxyClassFactory")]),s._v("，这里会有想要的答案")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210111134232414.png",alt:""}})]),s._v(" "),a("p",[s._v("回归正题，继续看一下 ProxyInvocationHandler，"),a("strong",[s._v("内部保持了被代理接口实现类的引用")]),s._v("，invoke 方法内部使用反射调用被代理接口实现类方法")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112101502099.png",alt:""}})]),s._v(" "),a("p",[s._v("可以看出生成的动态代理类，继承了 Proxy 类，然后对 Subject 接口进行了实现，而实现方法 sayHello 中实际调用的是 ProxyInvocationHandler 的 invoke 方法")]),s._v(" "),a("blockquote",[a("p",[s._v("一不小心发现了 JDK 动态代理不能对类进行代理的原因 ^ ^")])]),s._v(" "),a("p",[s._v("也就是说，当我们调用 "),a("code",[s._v("Subject#sayHello")]),s._v(" 时，方法调用链是这样的")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210111140427269.png",alt:""}})]),s._v(" "),a("p",[s._v("但是，Demo 里有被代理接口的实现类，Mybatis Mapper 没有，这要怎么玩")]),s._v(" "),a("p",[s._v("不知道不要紧，知道了估计也看不到这了，一起看下 mybatis 源码是怎么玩的")]),s._v(" "),a("blockquote",[a("p",[s._v("mybatis version：3.4.x")])]),s._v(" "),a("h2",{attrs:{id:"mybatis-源码实现"}},[s._v("Mybatis 源码实现 "),a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-源码实现"}},[s._v("#")])]),s._v(" "),a("p",[s._v("不知道大家考没考虑过这么一个问题，"),a("strong",[s._v("Mapper Mapper 为什么不需要实现类？")])]),s._v(" "),a("p",[s._v("假如说，我们项目使用的三层设计，Controller 控制请求接收，Service 负责业务处理，Mapper 负责数据库交互")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210111153124692.png",alt:""}})]),s._v(" "),a("p",[s._v("Mapper 层也就是我们常说的数据库映射层，负责对数据库的操作，比如对数据的查询或者新增、删除等")]),s._v(" "),a("p",[s._v("大胆设想下，项目没有使用 Mybatis，需要在 Mapper 实现层写数据库交互，会写一些什么内容？")]),s._v(" "),a("p",[s._v("会写一些常规的 JDBC 操作，比如：")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 装载Mysql驱动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("driveName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取连接")]),s._v("\ncon "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DriverManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getConnection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建Statement")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Statement")]),s._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" con"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createStatement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构建SQL语句")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" stuQuerySqlStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT * FROM student"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行SQL返回结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ResultSet")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("executeQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stuQuerySqlStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("如果项目中所有 Mapper 实现层都要这么玩，那岂不是很想打人...")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E6%B2%A1%E6%84%8F%E6%80%9D.png?x-oss-process=image/resize,h_200,w_200",alt:""}})]),s._v(" "),a("p",[s._v("所以 Mybatis 结合项目痛点，应运而生，怎么做的呢")]),s._v(" "),a("ol",[a("li",[s._v("将所有和 JDBC 交互的操作，底层采用 JDK 动态代理封装，使用者只需要自定义 Mapper 和 .xml 文件")]),s._v(" "),a("li",[s._v("SQL 语句定义在 .xml 文件或者 Mapper 中，项目启动时通过解析器解析 SQL 语句组装为 Java 中的对象")])]),s._v(" "),a("blockquote",[a("p",[s._v("解析器分为多种，因为 Mybatis 中不仅有静态语句，同时也包含动态 SQL 语句")])]),s._v(" "),a("p",[s._v("这也就是为什么 Mapper 接口不需要实现类，"),a("strong",[s._v("因为都已经被 Mybatis 通过动态代理封装了，如果每个 Mapper 都来一个实现类，臃肿且无用")]),s._v("。经过这一顿操作，展示给我们的就是项目里用到的 Mybatis 框架")]),s._v(" "),a("p",[s._v("上面铺垫这么久，终于要到主角了，"),a("strong",[s._v("为什么 Mybatis Mapper 接口没有实现类也可以实现动态代理")])]),s._v(" "),a("blockquote",[a("p",[s._v("想要严格按照先后顺序介绍 Mybatis 动态代理流程，而不超前引用未介绍过的术语，这几乎是不可能的，笔者尽量说的通俗易懂")])]),s._v(" "),a("h2",{attrs:{id:"无实现类完成动态代理"}},[s._v("无实现类完成动态代理 "),a("a",{staticClass:"header-anchor",attrs:{href:"#无实现类完成动态代理"}},[s._v("#")])]),s._v(" "),a("p",[s._v("核心点来了，拿起小本本坐板正了")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E5%BF%AB%E9%97%AA%E5%BC%80%EF%BC%8C%E4%BB%96%E8%A6%81%E5%BC%80%E5%A7%8B%E8%A3%85%E9%80%BC%E4%BA%86.jpg?x-oss-process=image/resize,h_300,w_300",alt:""}})]),s._v(" "),a("p",[s._v("我们先来看下普通动态代理有没有可能不用实现类，仅靠接口完成")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyInvocationHandler")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InvocationHandler")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 🧱 🧱 🧱 进入代理调用处理器 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("根据代码可以看到，我们并没有实现接口 Subject，继续看一下怎么实现动态代理")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),s._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Proxy")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n                        subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Subject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n         * 打印输出如下\n         * 调用处理器：🧱 🧱 🧱 进入代理调用处理器\n         */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("可以看到，对比文初的 Demo，这里对 "),a("code",[s._v("Proxy.newProxyInstance")]),s._v(" 方法的参数作出了变化")]),s._v(" "),a("p",[s._v("之前是通过实现类获取所实现接口的 Class 数组，而这里是把接口本身放到 Class 数组中，殊归同途")]),s._v(" "),a("p",[s._v("有实现接口和无实现接口产生的动态代理类有什么区别")]),s._v(" "),a("ol",[a("li",[s._v("有实现接口是对 "),a("code",[s._v("InvocationHandler#invoke")]),s._v(" 方法调用，invoke 方法通过反射调用被代理对象（SubjectImpl）方法（sayHello）")]),s._v(" "),a("li",[s._v("无实现接口则是仅对 "),a("code",[s._v("InvocationHandler#invoke")]),s._v(" 产生调用。"),a("strong",[s._v("所以有接口实现返回的是被代理对象接口返回值，而无实现接口返回的仅是 invoke 方法返回值")])])]),s._v(" "),a("p",[a("code",[s._v("InvocationHandler#invoke")]),s._v(" 方法返回值是 success 字符串，定义个字符串变量，是否能成功返回")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112222532385.png",alt:""}})]),s._v(" "),a("p",[s._v("现在第一个问题答案已经浮现，"),a("strong",[s._v("Mapper 没有实现类，所有调用 JDBC 等操作都是在 Mybatis InvocationHandler 实现的")])]),s._v(" "),a("p",[s._v("问题既然已经得到了解决，给人一种感觉，好像没那么难，但是你不好奇，Mybatis 底层怎么做的么？")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E9%9A%BE%E6%90%9E%E5%95%8A.jpg",alt:""}})]),s._v(" "),a("p",[s._v("先抛出一个问题，然后带着问题去看源码，可能让你记忆 Double 倍深刻")]),s._v(" "),a("p",[s._v("咱们 Demo 里的接口是固定的，Mybatis Mapper 可是不固定的，怎么搞？")]),s._v(" "),a("p",[a("strong",[s._v("Mybatis 是这么说的")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E6%88%91%E4%B8%8D%E8%A7%89%E5%BE%97%E8%BF%99%E6%98%AF%E4%B8%AA%E9%97%AE%E9%A2%98.jpeg?x-oss-process=image/resize,h_300,w_300",alt:""}})]),s._v(" "),a("p",[s._v("看看 Mybatis 底层它怎么实现的动态接口代理，小伙伴只需要关注标记处的代码即可")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112130314572.png",alt:""}})]),s._v(" "),a("p",[s._v("和我们的 Demo 代码很像，核心点在于 "),a("strong",[s._v("mapperInterface")]),s._v(" 它是怎么赋值的")]),s._v(" "),a("p",[s._v("先来说一下 Mybatis 代理工厂中具体生成动态代理类具体逻辑")]),s._v(" "),a("ol",[a("li",[s._v("根据 .xml 上关联的 namespace, 通过 "),a("code",[s._v("Class#forName")]),s._v(" 反射的方式返回 Class 对象（不止 .xml namespace 一种方式）")]),s._v(" "),a("li",[s._v("将得到的 Class 对象（实际就是接口对象）传递给 Mybatis 代理工厂生成代理对象，也就是刚才 mapperInterface 属性")])]),s._v(" "),a("p",[s._v("谜底揭晓，Mybatis 使用接口全限定名通过 "),a("code",[s._v("Class#forName")]),s._v(" 生成 Class 对象，这个 Class 对象类型就是接口")]),s._v(" "),a("p",[s._v("为了方便大家理解，通过 Mybatis 源码提供的测试类举例。假设已有接口 AutoConstructorMapper 以及对应的 .xml 如下")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112132212106.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112132257008.png",alt:""}})]),s._v(" "),a("p",[s._v("执行第一步，根据 .xml namespace 得到 Class 对象")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112132433980.png",alt:""}})]),s._v(" "),a("ol",[a("li",[s._v("首先第一步获取 .xml 上 mapper 标签 namespace 属性，得到 mapper 接口全限定信息")]),s._v(" "),a("li",[s._v("根据 mapper 全限定信息获取 Class 对象")]),s._v(" "),a("li",[s._v("添加到对应的映射器容器中，等待生成动态代理对象")])]),s._v(" "),a("p",[s._v("如果此时调用生成动态代理对象，代理工厂 newInstance 方法如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112131357019.png",alt:""}})]),s._v(" "),a("p",[s._v("至此，文初提的 Proxy、Mybatis 动态代理相关问题已全部答疑")]),s._v(" "),a("h2",{attrs:{id:"抽象类能否-jdk-动态代理"}},[s._v("抽象类能否 JDK 动态代理 "),a("a",{staticClass:"header-anchor",attrs:{href:"#抽象类能否-jdk-动态代理"}},[s._v("#")])]),s._v(" "),a("p",[s._v("说代码前结论先行，"),a("strong",[s._v("不能！")])]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractProxy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractProxy")]),s._v(" proxyInterface "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractProxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Proxy")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractProxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProxyInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nproxyInterface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("毫无疑问，报错是必然的，JDK 是不能对类进行代理的")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112133350848.png",alt:""}})]),s._v(" "),a("p",[s._v("带着小疑惑我们看一下 Proxy 源码报错位置，JDK 动态代理在生成代理类的过程代码中，会有是否接口验证")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210112133513069.png",alt:""}})]),s._v(" "),a("p",[s._v("抽象类终归是类，加个 abstract 也成不了接口（就像我，虽然胖了 60 斤，但依然是帅哥）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E5%98%BB%E5%98%BB%E5%98%BB.jpg",alt:""}})]),s._v(" "),a("p",[s._v("下次面试官如果有问这问题的，"),a("strong",[s._v("斩钉截铁一点")]),s._v("，就是不能")]),s._v(" "),a("h2",{attrs:{id:"结言"}},[s._v("结言 "),a("a",{staticClass:"header-anchor",attrs:{href:"#结言"}},[s._v("#")])]),s._v(" "),a("p",[s._v("结合 Mybatis 使用 JDK 动态代理相关的问题，展开了文章的讲述，这里总结下")]),s._v(" "),a("p",[a("strong",[s._v("Q：JDK 动态代理能否对类代理？")])]),s._v(" "),a("blockquote",[a("p",[s._v("因为 JDK 动态代理生成的代理类，会继承 Proxy 类，由于 Java 无法多继承，所以无法对类进行代理")])]),s._v(" "),a("p",[a("strong",[s._v("Q：抽象类是否可以 JDK 动态代理？")])]),s._v(" "),a("blockquote",[a("p",[s._v("不可以，抽象类本质上也是类，Proxy 生成代理类过程中，会校验传入 Class 是否接口")])]),s._v(" "),a("p",[a("strong",[s._v("Q：Mybatis Mapper 接口没有实现类，怎么实现的动态代理？")])]),s._v(" "),a("blockquote",[a("p",[s._v("Mybatis 会通过 "),a("code",[s._v("Class#forname")]),s._v(" 得到 Mapper 接口 Class 对象，生成对应的动态代理对象，核心业务处理都会在 "),a("code",[s._v("InvocationHandler#invoke")]),s._v(" 进行处理")])]),s._v(" "),a("p",[s._v("希望读过的小伙伴都能有所收获，如果对于文章内容有所疑惑，可以通过留言或者添加作者好友的方式沟通，祝好!")])])}),[],!1,null,null,null);t.default=e.exports}}]);